name: Swan Develop CI/CD

on:

  pull_request:
    branches:
      - develop

  push:
    branches:
      - develop

env:
  COMPOSE_FILE: stage-docker-compose.yaml
  SWAN_IMAGE: swan-stage-front
  SWAN_IMAGE_WITH_URL: ${{ secrets.REGISTRY_URL }}/develop/swan-stage-front


jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    
    - name: Run Tests
      run: |
        npm run test:unit
    - name: Build image
      run: |
        docker-compose -f ${{ env.COMPOSE_FILE }} build
    - name: Push image
      if: github.ref == 'refs/heads/develop' #for push only
      run: |
        export DOCKER_DEV_TAG=${{ github.event.pull_request.head.sha }}
        docker login ${{ secrets.REGISTRY_URL }} --username "${{ secrets.REGISTRY_USERNAME }}" --password "${{ secrets.REGISTRY_PASSWORD }}"
        docker tag ${{ env.SWAN_IMAGE }} ${{ env.SWAN_IMAGE_WITH_URL }}:$DOCKER_DEV_TAG
        docker push ${{ env.SWAN_IMAGE_WITH_URL }}:$DOCKER_DEV_TAG
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' #for push only

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: add server utils env
        run: |
          echo "$GITHUB_CONTEXT"| jq '.event.commits[].id' | tail -2 | head -1 |sed 's/\"//g' >> extracted_tag.txt
          export TAG=$(cat extracted_tag.txt)
          echo "REGISTRY_USERNAME=${{ secrets.REGISTRY_USERNAME }}" >> server.env
          echo "REGISTRY_PASSWORD=${{ secrets.REGISTRY_PASSWORD }}" >> server.env
          echo "REGISTRY_URL=${{ secrets.REGISTRY_URL }}" >> server.env
          echo "SWAN_IMAGE=${{ env.SWAN_IMAGE }}" >> server.env
          echo "SWAN_IMAGE_WITH_URL=${{ env.SWAN_IMAGE_WITH_URL }}" >> server.env
          echo "COMPOSE_FILE=${{ env.COMPOSE_FILE }}" >> server.env
          echo "DOCKER_DEV_TAG=$TAG" >> server.env
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.DEPLOY_KEY }}"
      
      - name: Deploy images on Server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./server.env ./${{ env.COMPOSE_FILE }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:~/swan-stage-front
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'ENDSSH'
            cd ~/swan-stage-front
            source server.env
            docker login $REGISTRY_URL --username $REGISTRY_USERNAME --password $REGISTRY_PASSWORD
            docker pull $SWAN_IMAGE_WITH_URL:$DOCKER_DEV_TAG
            export SWAN_IMAGE=$SWAN_IMAGE_WITH_URL:$DOCKER_DEV_TAG
            docker-compose -f $COMPOSE_FILE up -d
            rm -rf server.env
          ENDSSH


